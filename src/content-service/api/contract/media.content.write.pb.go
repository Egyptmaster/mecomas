// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.2
// source: src/contracts/media-content/media.content.write.proto

package contract

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreSignedUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique identifier of the corresponding media item
	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// the upload link requested
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PreSignedUrl) Reset() {
	*x = PreSignedUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSignedUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignedUrl) ProtoMessage() {}

func (x *PreSignedUrl) ProtoReflect() protoreflect.Message {
	mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignedUrl.ProtoReflect.Descriptor instead.
func (*PreSignedUrl) Descriptor() ([]byte, []int) {
	return file_src_contracts_media_content_media_content_write_proto_rawDescGZIP(), []int{0}
}

func (x *PreSignedUrl) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *PreSignedUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type WriteComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the media id the comment is about
	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// the id of the user which creates the comment
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// the text of the comment
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *WriteComment) Reset() {
	*x = WriteComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteComment) ProtoMessage() {}

func (x *WriteComment) ProtoReflect() protoreflect.Message {
	mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteComment.ProtoReflect.Descriptor instead.
func (*WriteComment) Descriptor() ([]byte, []int) {
	return file_src_contracts_media_content_media_content_write_proto_rawDescGZIP(), []int{1}
}

func (x *WriteComment) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *WriteComment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WriteComment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type WriteLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the media id the like is for
	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// the id of the user which added the like to media content
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *WriteLike) Reset() {
	*x = WriteLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLike) ProtoMessage() {}

func (x *WriteLike) ProtoReflect() protoreflect.Message {
	mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLike.ProtoReflect.Descriptor instead.
func (*WriteLike) Descriptor() ([]byte, []int) {
	return file_src_contracts_media_content_media_content_write_proto_rawDescGZIP(), []int{2}
}

func (x *WriteLike) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *WriteLike) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PreSignedUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique identifier of the media item
	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// the user id of the owner
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *PreSignedUrlRequest) Reset() {
	*x = PreSignedUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSignedUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignedUrlRequest) ProtoMessage() {}

func (x *PreSignedUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignedUrlRequest.ProtoReflect.Descriptor instead.
func (*PreSignedUrlRequest) Descriptor() ([]byte, []int) {
	return file_src_contracts_media_content_media_content_write_proto_rawDescGZIP(), []int{3}
}

func (x *PreSignedUrlRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *PreSignedUrlRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type WriteMediaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique identifier of the media item
	MediaId *string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3,oneof" json:"media_id,omitempty"`
	// the content type of the media
	ContentType *string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3,oneof" json:"content_type,omitempty"`
	// the description set by the user while upload
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// a list of tags for the given media
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// the user id of the owner
	OwnerId *string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	// the visibility of the item
	Visibility *ItemVisibility `protobuf:"varint,6,opt,name=visibility,proto3,enum=contracts.media_content.ItemVisibility,oneof" json:"visibility,omitempty"`
}

func (x *WriteMediaItem) Reset() {
	*x = WriteMediaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMediaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMediaItem) ProtoMessage() {}

func (x *WriteMediaItem) ProtoReflect() protoreflect.Message {
	mi := &file_src_contracts_media_content_media_content_write_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMediaItem.ProtoReflect.Descriptor instead.
func (*WriteMediaItem) Descriptor() ([]byte, []int) {
	return file_src_contracts_media_content_media_content_write_proto_rawDescGZIP(), []int{4}
}

func (x *WriteMediaItem) GetMediaId() string {
	if x != nil && x.MediaId != nil {
		return *x.MediaId
	}
	return ""
}

func (x *WriteMediaItem) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *WriteMediaItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *WriteMediaItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WriteMediaItem) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *WriteMediaItem) GetVisibility() ItemVisibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return ItemVisibility_VISIBILITY_UNSPECIFIED
}

var File_src_contracts_media_content_media_content_write_proto protoreflect.FileDescriptor

var file_src_contracts_media_content_media_content_write_proto_rawDesc = []byte{
	0x0a, 0x35, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x1a, 0x36, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x56, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3f, 0x0a,
	0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x13, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcb, 0x02, 0x0a, 0x0e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x4c, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x04,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x32, 0xda, 0x04, 0x0a, 0x12, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x64, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x1a,
	0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x1a, 0x1b, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64,
	0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1b, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_contracts_media_content_media_content_write_proto_rawDescOnce sync.Once
	file_src_contracts_media_content_media_content_write_proto_rawDescData = file_src_contracts_media_content_media_content_write_proto_rawDesc
)

func file_src_contracts_media_content_media_content_write_proto_rawDescGZIP() []byte {
	file_src_contracts_media_content_media_content_write_proto_rawDescOnce.Do(func() {
		file_src_contracts_media_content_media_content_write_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_contracts_media_content_media_content_write_proto_rawDescData)
	})
	return file_src_contracts_media_content_media_content_write_proto_rawDescData
}

var file_src_contracts_media_content_media_content_write_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_src_contracts_media_content_media_content_write_proto_goTypes = []interface{}{
	(*PreSignedUrl)(nil),        // 0: contracts.media_content.PreSignedUrl
	(*WriteComment)(nil),        // 1: contracts.media_content.WriteComment
	(*WriteLike)(nil),           // 2: contracts.media_content.WriteLike
	(*PreSignedUrlRequest)(nil), // 3: contracts.media_content.PreSignedUrlRequest
	(*WriteMediaItem)(nil),      // 4: contracts.media_content.WriteMediaItem
	(ItemVisibility)(0),         // 5: contracts.media_content.ItemVisibility
	(*Id)(nil),                  // 6: contracts.media_content.Id
}
var file_src_contracts_media_content_media_content_write_proto_depIdxs = []int32{
	5, // 0: contracts.media_content.WriteMediaItem.visibility:type_name -> contracts.media_content.ItemVisibility
	6, // 1: contracts.media_content.ModifyMediaContent.GeneratePreSignedUrl:input_type -> contracts.media_content.Id
	4, // 2: contracts.media_content.ModifyMediaContent.AddOrUpdateMediaItem:input_type -> contracts.media_content.WriteMediaItem
	2, // 3: contracts.media_content.ModifyMediaContent.AddLike:input_type -> contracts.media_content.WriteLike
	1, // 4: contracts.media_content.ModifyMediaContent.AddComment:input_type -> contracts.media_content.WriteComment
	6, // 5: contracts.media_content.ModifyMediaContent.DeleteMediaItem:input_type -> contracts.media_content.Id
	6, // 6: contracts.media_content.ModifyMediaContent.DeleteLike:input_type -> contracts.media_content.Id
	6, // 7: contracts.media_content.ModifyMediaContent.DeleteComment:input_type -> contracts.media_content.Id
	0, // 8: contracts.media_content.ModifyMediaContent.GeneratePreSignedUrl:output_type -> contracts.media_content.PreSignedUrl
	6, // 9: contracts.media_content.ModifyMediaContent.AddOrUpdateMediaItem:output_type -> contracts.media_content.Id
	6, // 10: contracts.media_content.ModifyMediaContent.AddLike:output_type -> contracts.media_content.Id
	6, // 11: contracts.media_content.ModifyMediaContent.AddComment:output_type -> contracts.media_content.Id
	6, // 12: contracts.media_content.ModifyMediaContent.DeleteMediaItem:output_type -> contracts.media_content.Id
	6, // 13: contracts.media_content.ModifyMediaContent.DeleteLike:output_type -> contracts.media_content.Id
	6, // 14: contracts.media_content.ModifyMediaContent.DeleteComment:output_type -> contracts.media_content.Id
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_src_contracts_media_content_media_content_write_proto_init() }
func file_src_contracts_media_content_media_content_write_proto_init() {
	if File_src_contracts_media_content_media_content_write_proto != nil {
		return
	}
	file_src_contracts_media_content_media_content_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_src_contracts_media_content_media_content_write_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSignedUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_contracts_media_content_media_content_write_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_contracts_media_content_media_content_write_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_contracts_media_content_media_content_write_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSignedUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_contracts_media_content_media_content_write_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMediaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_src_contracts_media_content_media_content_write_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_contracts_media_content_media_content_write_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_contracts_media_content_media_content_write_proto_goTypes,
		DependencyIndexes: file_src_contracts_media_content_media_content_write_proto_depIdxs,
		MessageInfos:      file_src_contracts_media_content_media_content_write_proto_msgTypes,
	}.Build()
	File_src_contracts_media_content_media_content_write_proto = out.File
	file_src_contracts_media_content_media_content_write_proto_rawDesc = nil
	file_src_contracts_media_content_media_content_write_proto_goTypes = nil
	file_src_contracts_media_content_media_content_write_proto_depIdxs = nil
}
